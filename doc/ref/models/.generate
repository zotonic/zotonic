#!/usr/bin/env bash

# Get core models

for f in $CORE/src/models/m_*.erl
do
    dir=${0%/*}
    mod=core
    file=${f##*/m_}
    model=${file%.erl}
    stub=$dir/meta-$model.rst
    doc=$dir/model_$model.rst
    title="m_$model"

    if grep $file $dir/.ignore >/dev/null; then
        continue
    fi

    # no meta, since this is a 'core' model, and as such shouldn't be listed in any module's meta file

    cat <<EOF > $stub
.. This file is generated.
   To document this model, edit the model_$model.rst file, which should include this file.

.. index:: model; $model
   single: $mod; model, $model
.. _model-$model:

$title
${title//?/=}

* Module: $mod

EOF

    if [ ! -e $doc ]; then
        echo "New doc: $doc"
        cat <<EOF > $doc

.. include:: meta-$model.rst

.. todo:: Not yet documented.
EOF
    fi

done


# Get models from modules

# /path/to/zotonic/modules/<mod>/models/m_model_name.erl
for f in `find $MODULES -name m_\*`
do
    read -r mod model <<EOF
`echo $f | sed -e 's,.*/\zotonic_\(mod_[^/]*\).*/m_\(.*\).erl,\1 \2,'`
EOF
    dir=${0%/*}
    base=$model
    title="m_$model"
    stub=$dir/meta-$base.rst
    doc=$dir/model_$base.rst

    cat <<EOF > $stub
.. This file is generated.
   To document this model, edit the model_$base.rst file, which should include this file.

.. index:: model; $base
   single: $mod; model, $base
.. _model-$model:

$title
${title//?/=}

* Module: :ref:\`$mod\`

EOF

    if [ ! -e $doc ]; then
        echo "New doc: $doc"
        cat <<EOF > $doc

.. include:: meta-$base.rst

Not yet documented.
EOF
    fi

done
