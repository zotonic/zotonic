#!/usr/bin/env sh

if [ -z "${ZOTONIC}" ]; then
   readonly ZOTONIC=${ZOTONIC:=$(\cd `dirname -- "$0"`/../../..;\pwd)}
   export ZOTONIC
fi
# Protect PATH and ZOTONIC environment variables to be changed at runtime
readonly PATH
for var in $(\env | \grep ZOTONIC_ | \cut -d '=' -f 1)
do
    readonly "${var}"
    export "${var}"
done
readonly ZOTONIC_BIN=$(\cd `\dirname -- "$0"`;\pwd)
export ZOTONIC_BIN

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    FreeBSD*)   machine=BSD;;
    DragonFly*) machine=BSD;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac
case "${machine}" in
    Linux)
        readonly ERL_EPMD_ADDRESS=${ERL_EPMD_ADDRESS:=127.0.0.1,127.0.1.1};;
    *)
        readonly ERL_EPMD_ADDRESS=${ERL_EPMD_ADDRESS:=127.0.0.1}
esac
export ERL_EPMD_ADDRESS

cd -- "${ZOTONIC}" || \exit 1

case "$1" in
    completion)
        case "${machine}" in
            Linux*)     BASH_FILE=~/.bashrc;;
            Mac*)       BASH_FILE=~/.bash_profile;;
            BSD*)       BASH_FILE=~/.bashrc;;
            *)          unset BASH_FILE
        esac

        if [ -n $BASH_FILE ]; then
            if [ -f $BASH_FILE ]; then
                COMMAND_NAMES="$(${ZOTONIC_BIN}/zotonic.escript command_names)"
                OUTPUT="$ZOTONIC_BIN/zotonic-completion.bash"
                # TODO: Completion for options
                printf "#/usr/bin/env bash\n\n_zotonic_completions()\n{\n\tif [ \"\${#COMP_WORDS[@]}\" != \"2\" ]; then\n\t\treturn\n\tfi\n\n\tlocal suggestions=(\$(compgen -W %s \"\${COMP_WORDS[1]}\"))\n\tCOMPREPLY=(\"\${suggestions[@]}\")\n}\n\ncomplete -F _zotonic_completions zotonic" "$COMMAND_NAMES" >| "$OUTPUT"
                if grep -q "source $OUTPUT" $BASH_FILE; then
                    echo "Completion for command 'bin/zotonic' was already appended to $BASH_FILE."
                else
                    echo "source $OUTPUT" >> $BASH_FILE
                    bash -c "source $BASH_FILE"
                    echo "Completion for command 'bin/zotonic' appended to $BASH_FILE."
                fi
                echo "If the completion doesn't work, try restarting the current terminal."
            else
                echo "$BASH_FILE does not exist."
                echo "The completion for 'bin/zotonic' was not created."
            fi
        else
            echo "The completion for 'bin/zotonic' is not supported."
        fi
        ;;
    start)
        CMD="$(${ZOTONIC_BIN}/zotonic.escript start)"
        eval ${CMD}
        ${ZOTONIC_BIN}/zotonic.escript wait
        ;;
    start_nodaemon|start-nodaemon)
        CMD="$(${ZOTONIC_BIN}/zotonic.escript start_nodaemon)"
        eval ${CMD}
        ;;
    shell)
        CMD="$(${ZOTONIC_BIN}/zotonic.escript shell)"
        eval ${CMD}
        ;;
    debug)
        CMD="$(${ZOTONIC_BIN}/zotonic.escript debug)"
        eval ${CMD}
        ;;
    runtests)
        export ZOTONIC_PORT=8040
        export ZOTONIC_LISTEN_PORT=8040
        export ZOTONIC_SSL_PORT=8043
        export ZOTONIC_SSL_LISTEN_PORT=8043
        export ZOTONIC_SMTP_BOUNCE_PORT=2535

        CMD="$(${ZOTONIC_BIN}/zotonic.escript runtests $@)"
        eval ${CMD}
        ;;
    stop)
        if [ -s "${ZOTONIC_PIDFILE}" ]; then
            readonly PID=$(\cat -- "${ZOTONIC_PIDFILE}")
        fi
        ${ZOTONIC_BIN}/zotonic.escript stop &
        \wait $!
        if [ ! -z "${PID}" ] && [ "${ZOTONIC_WAIT_VM:=0}" -eq "1" ]; then
            \printf "%s" "Waiting for VM stop "
            while \kill -0 ${PID} 2> /dev/null; do \printf "%s" "." ; \sleep 1; done;
            \printf "%s\n" " OK"
        fi
        ;;
    *)
        ${ZOTONIC_BIN}/zotonic.escript "$@"
        ;;
esac
