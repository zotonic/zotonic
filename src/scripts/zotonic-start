#!/usr/bin/env escript
%%! -pa zotonic/zotonic/_build/default/lib/zotonic_core/ebin
%%
%% @author M, <tantemelki@gmail.com>
%% @copyright 2017
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%	 http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

%%
%% usage zotonic-start
%%

-export([main/1]).

-define(NODENAME, "zotonic001").
-define(ZOTONIC, get_zotonic_path()).
-define(NODEHOST, get_node_host()).
-define(ZOTONIC_SCRIPTS, ?ZOTONIC ++ "/src/scripts").

get_zotonic_path() ->
    {ok, CurrentDir} = file:get_cwd(),
    _Dir = CurrentDir.

get_node_host() ->
    {ok, HostName} = inet:gethostname(),
    _NodeHost = HostName.

main(_) ->
    ZotonicApp = string:concat(?ZOTONIC, "/_build/default/lib/zotonic_core/ebin/zotonic_core.app"),
    case filelib:is_file(ZotonicApp) of
         true ->
             io:format("Starting Zotonic ~s@~s..", [?NODENAME, ?NODEHOST]),
             zotonic:start(),
             case zotonic:ping() of
                 pong ->
                     io:format("OK~n");
                 pang ->
                     io:format("Something went wrong while starting Zotonic. Please check the log files ~s~n",
                         [string:concat(?ZOTONIC, "/priv/log")])
             end;
        false ->
            io:format("Building Zotonic for the first time.~n")
    end.
